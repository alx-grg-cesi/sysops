name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: echo "No tests implemented"

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    - name: Generate kubeconfig
      run: |
        cat <<EOF > kubeconfig.yaml
        apiVersion: v1
        kind: Config
        clusters:
        - name: minikube
          cluster:
            server: ${{ secrets.K8S_SERVER }}
            certificate-authority-data: ${{ secrets.K8S_CA_CERT }}
        users:
        - name: cicd-sa
          user:
            token: ${{ secrets.K8S_TOKEN }}
        contexts:
        - name: cicd-<contexte>
          context:
            cluster: minikube
            user: cicd-sa
        current-context: cicd-<contexte>
        EOF

    - name: Configurer KUBECONFIG
      run: |
        export KUBECONFIG=$PWD/kubeconfig.yaml
        kubectl config view
        
    - name: Vérifier les fichiers présents (Debug)
      run: ls -R

    - name: Deploy to Kubernetes
      run: |
        kubectl version --client
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
